<doc>
	<legacy_id>1751</legacy_id>
	<name>backScripts</name>
	<type>function</type>

	<syntax>
		<example>the backScripts</example>
		<example>backScripts()</example>
	</syntax>

	<synonyms>
	</synonyms>

	<summary><glossary tag="return">Returns</glossary> a list of <glossary tag="object">objects</glossary> that have been inserted into the <glossary tag="message path">message path</glossary> after the <object tag="stack">stack</object> the target <glossary tag="object">object</glossary> belongs to.</summary>

	<examples>
<example>the backScripts</example>
<example>if the long ID of me is not among the lines of the backScripts then beep</example>
	</examples>

	<history>
		<introduced version="1.0">Added.</introduced>
		<deprecated version=""></deprecated>
		<removed version=""></removed>
		<changed version=""></changed>
		<experimental version=""></experimental>
		<nonexperimental version=""></nonexperimental>
	</history>

	<objects>
	</objects>

	<platforms>
		<mac/>
		<windows/>
		<linux/>
		<ios/>
		<android/>
	</platforms>

	<classes>
		<desktop/>
		<server/>
		<web/>
		<mobile/>
	</classes>

	<security>
	</security>


	<classification>
		<category>Objects &amp; Messages</category>
		<category>Standalone Applications</category>
	</classification>

	<references>
		<command tag="remove script">remove script command</command>
		<keyword tag="back">back keyword</keyword>
	</references>

	<description>
	<overview>Use the <b>backScripts</b> function to find out which scripts receive messages and function calls after the current object, the objects that own the current object, and any stacks in the stacksInUse.</overview>

		<parameters>
		</parameters>

	<value>The <b>backScripts</b> function returns a list of the long ID property of all objects that have been inserted into the back, one ID per line.</value>
	<comments>A script inserted into the back with the <command tag="insert script">insert script</command> command receives messages after all objects in the message path, just before the application itself receives the message.<p></p><p>If more than one object is in the <b>backScripts</b>, their order in the message path is the same as their order in the list. For example, the first object in the <b>backScripts</b> receives messages before the second object. This order is the reverse of the order in which the objects were added with the <command tag="insert script">insert script</command> command.</p></comments>
	</description>
</doc>